<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tyiti.easycommerce.repository.OrderReturnDao">
	<resultMap id="BaseResultMap" type="com.tyiti.easycommerce.entity.OrderReturn">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_sku_id" property="orderSkuId" jdbcType="INTEGER" />
		<result column="no" property="no" jdbcType="VARCHAR" />
		<result column="count" property="count" jdbcType="INTEGER" />
		<result column="avg_price" property="avgPrice" jdbcType="DECIMAL" />
		<result column="return_amount" property="returnAmount"
			jdbcType="DECIMAL" />
		<result column="reason" property="reason" jdbcType="VARCHAR" />
		<result column="pics" property="pics" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="reason_type" property="reasonType" jdbcType="INTEGER" />
		<result column="order_id" property="orderId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, order_sku_id,no, count, avg_price, return_amount,
		reason, pics, status,
		create_time,
		update_time, reason_type
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		t1.id, order_sku_id,no, count, t1.avg_price,
		return_amount,
		reason, pics, status,
		create_time,
		update_time,
		reason_type,
		t2.order_id orderId
		from t_order_return t1
		left join t_order_sku t2 on t1.order_sku_id = t2.id 
		where t1.id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		t_order_return
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.tyiti.easycommerce.entity.OrderReturn">
		insert into t_order_return
		(id, order_sku_id,no, count,
		avg_price, return_amount, reason,
		pics,
		status, create_time,
		update_time, reason_type)
		values
		(#{id,jdbcType=INTEGER}, #{orderSkuId,jdbcType=INTEGER},
		#{no,jdbcType=VARCHAR},#{count,jdbcType=INTEGER},
		#{avgPrice,jdbcType=DECIMAL}, #{returnAmount,jdbcType=DECIMAL},
		#{reason,jdbcType=VARCHAR},
		#{pics,jdbcType=VARCHAR},
		#{status,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP}, #{reasonType,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.tyiti.easycommerce.entity.OrderReturn">
		insert into t_order_return
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="orderSkuId != null">
				order_sku_id,
			</if>
			<if test="no != null">
				no,
			</if>
			<if test="count != null">
				count,
			</if>
			<if test="avgPrice != null">
				avg_price,
			</if>
			<if test="returnAmount != null">
				return_amount,
			</if>
			<if test="reason != null">
				reason,
			</if>
			<if test="pics != null">
				pics,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="reasonType != null">
				reason_type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="orderSkuId != null">
				#{orderSkuId,jdbcType=INTEGER},
			</if>
			<if test="no != null">
				#{no,jdbcType=VARCHAR},
			</if>
			<if test="count != null">
				#{count,jdbcType=INTEGER},
			</if>
			<if test="avgPrice != null">
				#{avgPrice,jdbcType=DECIMAL},
			</if>
			<if test="returnAmount != null">
				#{returnAmount,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				#{reason,jdbcType=VARCHAR},
			</if>
			<if test="pics != null">
				#{pics,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="reasonType != null">
				#{reasonType,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.tyiti.easycommerce.entity.OrderReturn">
		update t_order_return
		<set>
			<if test="orderSkuId != null">
				order_sku_id = #{orderSkuId,jdbcType=INTEGER},
			</if>
			<if test="no != null">
				no = #{no,jdbcType=VARCHAR},
			</if>
			<if test="count != null">
				count = #{count,jdbcType=INTEGER},
			</if>
			<if test="avgPrice != null">
				avg_price = #{avgPrice,jdbcType=DECIMAL},
			</if>
			<if test="returnAmount != null">
				return_amount = #{returnAmount,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				reason = #{reason,jdbcType=VARCHAR},
			</if>
			<if test="pics != null">
				pics = #{pics,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="reasonType != null">
				reason_type = #{reasonType,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.tyiti.easycommerce.entity.OrderReturn">
		update
		t_order_return
		set order_sku_id = #{orderSkuId,jdbcType=INTEGER},
		no =
		#{no,jdbcType=VARCHAR},
		count = #{count,jdbcType=INTEGER},
		avg_price =
		#{avgPrice,jdbcType=DECIMAL},
		return_amount =
		#{returnAmount,jdbcType=DECIMAL},
		reason = #{reason,jdbcType=VARCHAR},
		pics = #{pics,jdbcType=VARCHAR},
		status = #{status,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		reason_type =
		#{reasonType,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectList" parameterType="java.util.Map"
		resultType="java.util.Map">
		select t1.id,
		t1.no returnNo,
		t1.order_sku_id orderSkuId,
		t1.count count,
		t1.avg_price avgPrice,
		t1.return_amount returnAmount,
		t1.reason reason,
		t1.pics pics,
		t1.status status,
		t1.create_time createTime,
		t1.update_time updateTime,
		t1.reason_type reasonType,
		t2.sku_name skuName,
		t2.sku_price sailPrice ,
		t2.return_count returnCount,
		t3.id orderId,
		t3.no orderNo,
		t4.mobile
		from t_order_return t1
		left
		join t_order_sku t2 on t1.order_sku_id = t2.id
		left join t_order t3 on
		t2.order_id = t3.id
		left join t_user t4 on t3.cust_id = t4.id 
		<include refid="where_columns"></include>
		order by t1.create_time desc
		<if test="offset != null and limit != null">
			LIMIT #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
		</if>
	</select>

	<select id="selectCount" parameterType="java.util.Map"
		resultType="java.lang.Long">
		select count(*)
		from t_order_return t1
		left join t_order_sku
		t2 on
		t1.order_sku_id = t2.id
		left join t_order t3 on t2.order_id =t3.id
		<include refid="where_columns"></include>
	</select>

	<sql id="where_columns">
		where 1=1
		<if test="returnNo != null and  returnNo !=''">
			and t1.no=#{returnNo,jdbcType=VARCHAR}
		</if>
		<if test="orderNo != null and  orderNo !=''">
			and t3.no=#{orderNo,jdbcType=VARCHAR}
		</if>
		<if test="startTime != null and  startTime !=''">
			and t1.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null and  endTime !=''">
			and t1.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
		<if test="status != null and  status !=''">
			and t1.status = #{status,jdbcType=INTEGER}
		</if>
		<if test="returnType != null and  returnType !=''">
			and t1.type = #{returnType,jdbcType=INTEGER}
		</if>
	</sql>
	<!-- 退货 并且退款的数量  -->
	<select id="selectReturnCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		select ifnull(sum(count),0) from t_order_return where status = 5 and order_sku_id in (
			select id from t_order_sku where order_id = #{orderId,jdbcType=INTEGER}
		)
	</select>
	<select id="selectBuyCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
	select ifnull(sum(sku_count),0)  from t_order_sku where order_id = #{orderId,jdbcType=INTEGER}
	</select>
	<!--  提交退货 并且同意 或者收货 或者 退款 成功退货 -->
	<select id="selectReturnCountByOrderSkuId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		select ifnull(sum(count),0) from t_order_return where status in(3,4,5) and order_sku_id = #{orderSkuId}
		)
	</select>
</mapper>