<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tyiti.easycommerce.repository.OrderCancellationDao">
	<resultMap id="BaseResultMap"
		type="com.tyiti.easycommerce.entity.OrderCancellation">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_id" property="orderId" jdbcType="INTEGER" />
		<result column="no" property="no" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="reason" property="reason" jdbcType="VARCHAR" />
		<result column="pics" property="pics" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="reason_type" property="reasonType" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>
	<insert id="insertSelective" parameterType="com.tyiti.easycommerce.entity.OrderCancellation">
		insert into t_order_cancellation
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="orderId != null">
				order_id,
			</if>
			<if test="no != null">
				no,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="reason != null">
				reason,
			</if>
			<if test="pics != null">
				pics,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="orderId != null">
				#{orderId,jdbcType=INTEGER},
			</if>
			<if test="no != null">
				#{no,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="reason != null">
				#{reason,jdbcType=VARCHAR},
			</if>
			<if test="pics != null">
				#{pics,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.tyiti.easycommerce.entity.OrderCancellation">
		update t_order_cancellation
		<set>
			<if test="orderId != null">
				order_id = #{orderId,jdbcType=INTEGER},
			</if>
			<if test="no != null">
				no = #{no,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="reason != null">
				reason = #{reason,jdbcType=VARCHAR},
			</if>
			<if test="pics != null">
				pics = #{pics,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 退货列表 start -->
	<select id="selectOrderCancelList" parameterType="java.util.Map"
		resultType="java.util.Map">
		select t1.id,t1.no cancelNo , t2.no orderNo,t1.create_time
		createTime,t3.sku_name skuName,t3.sku_price skuPrice,t3.sku_count
		skuCount,t2.down_payment downPayment,t2.installment_amount
		installmentAmount,t2.installment_months installmentMonths,t4.mobile ,
		t4.real_name realName,t1.status,t5.amount discount,
		case
		when t1.status
		= '0' then '待审核'
		when t1.status = '1' then '已确认'
		when
		t1.status = '2'
		then '已拒绝'
		when t1.status = '3' then '待入库'
		when
		t1.status = '4' then
		'待退款'
		when t1.status = '5' then '已退款'
		else '异常信息' end statusText,
		t1.type cancelType,case
		when t1.type = '1' then
		'申请取消'
		when t1.type = '2'
		then '申请退货'
		end cancelTypeText ,
		po.code pickCode,
		po.status
		pickupStatus,
		pt.name pickupPointName,
		pt.address pickupPointAddress
		from t_order_cancellation t1
		left join t_order t2 on t1.order_id =
		t2.id
		left join t_order_sku t3 on t2.id =t3.order_id
		left join t_user t4
		on t4.id = t2.cust_id
		left join t_order_payment t5 on t5.order_id =
		t1.order_id and t5.category=3 and t5.type =11
		left join t_pickup_order
		po on po.order_id = t2.id
		left join t_pickup_point pt on
		po.pickup_point_id = pt.id
		<include refid="where_columns"></include>
		<if test="sort != null and sort != ''">
			<include refid="order_columns" />
		</if>
		<if test="sort == null or sort == ''">
			order by t1.create_time desc
		</if>
		<if test="limit != null and limit != ''">
			LIMIT #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
		</if>
	</select>

	<select id="selectOrderCancelCount" parameterType="java.util.Map"
		resultType="java.lang.Long">
		select count(*)
		from t_order_cancellation t1
		left join t_order t2 on
		t1.order_id = t2.id
		left join t_order_sku t3 on t2.id =t3.order_id
		left
		join t_user t4 on t4.id = t2.cust_id
		<include refid="where_columns"></include>
	</select>
	<!-- 退货列表 end -->
	<!-- 退货where条件 start -->
	<sql id="where_columns">
		where 1=1
		<if test="cancelNo != null and  cancelNo !=''">
			and t1.no=#{cancelNo,jdbcType=VARCHAR}
		</if>
		<if test="orderNo != null and  orderNo !=''">
			and t2.no=#{orderNo,jdbcType=VARCHAR}
		</if>
		<if test="startTime != null and  startTime !=''">
			and t1.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null and  endTime !=''">
			and t1.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
		<if test="status != null and  status !=''">
			and t1.status = #{status,jdbcType=INTEGER}
		</if>
		<if test="cancelType != null and  cancelType !=''">
			and t1.type = #{cancelType,jdbcType=INTEGER}
		</if>
	</sql>
	<!-- 退货where条件 end -->
	<!-- 退货条件查询排序 start -->
	<sql id="order_columns">
		<if test="sort =='cancelNo'">
			ORDER BY t1.no ${order}
		</if>
		<if test="sort =='orderNo'">
			ORDER BY t2.no ${order}
		</if>
		<if test="sort =='createTime'">
			ORDER BY t1.create_time ${order}
		</if>
		<if test="sort =='skuName'">
			ORDER BY t3.sku_name ${order}
		</if>
		<if test="sort =='installmentAmount'">
			ORDER BY t2.installment_amount ${order}
		</if>
		<if test="sort =='downPayment'">
			ORDER BY t2.down_payment ${order}
		</if>
		<if test="sort =='skeCount'">
			ORDER BY t3.sku_count ${order}
		</if>
		<if test="sort =='skuPrice'">
			ORDER BY t3.sku_price ${order}
		</if>
		<if test="sort =='realName'">
			ORDER BY t4.real_name ${order}
		</if>
		<if test="sort =='mobile'">
			ORDER BY t4.mobile ${order}
		</if>
		<if test="sort =='payMethod'">
			ORDER BY t2.pay_method ${order}
		</if>
		<if test="sort =='status'">
			ORDER BY t1.status ${order}
		</if>
	</sql>
	<!-- 退货条件查询排序 end -->

	<!-- 退货订单详细 单条记录 start -->
	<select id="orderCancelDetail" resultType="java.util.Map"
		parameterType="java.util.Map">
		select
		t0.id ,
		t0.type cancelType,
		t0.order_id orderId,
		t0.no cancelNo,
		t0.reason_type reasonType,
		t0.reason ,
		t0.pics ,
		t0.create_time createTime,
		t1.create_time orderCreateTime ,
		t0.status
		cancelStatus,
		t1.amount,
		case
		when t0.status = '0' then '待审核'
		when
		t0.status = '1' then '已确认'
		when
		t0.status = '2' then '已拒绝'
		when t0.status
		= '3' then '待入库'
		when
		t0.status = '4' then '待退款'
		when t0.status = '5'
		then '已退款'
		else '异常信息'
		end cancelStatusText ,
		t1.no orderNo,
		t1.status
		orderStatus,
		case
		when t1.status = '0' then '草稿'
		when t1.status = '1'
		then '未付款'
		when
		t1.status = '2' then '已付款'
		when t1.status = '3' then
		'已确认'
		when
		t1.status = '4' then '已制单'
		when t1.status = '5' then '已发货'
		when
		t1.status = '6' then '已完成'
		when t1.status = '8' then '已退货'
		when
		t1.status
		= '9' then '已取消'
		else '异常信息' end orderStatusText ,
		t1.installment_amount installmentAmount,
		t1.installment_months
		installmentMonths,
		t1.down_payment downPayment,
		t1.down_payment_payed
		downPaymentPayed,
		CONCAT(
		case
		when t1.down_payment_payed = 0 then '首付未付'
		when t1.down_payment_payed = 1 then '首付已付'
		when t1.down_payment_payed =
		2 then '无首付'
		else '首付信息异常' end ,
		case
		when t1.installment_payed = 0 then
		'分期未付'
		when t1.installment_payed = 1 then '分期已付'
		when
		t1.installment_payed = 2 then '无分期'
		else '首付信息异常' end ) payedStatus,
		t1.installment_payed installmentPayed,
		t1.address_name addressName,
		t1.address_mobile addressMobile,
		t1.address_zip addressZip,
		t1.address_full_text addressFullText,
		t2.real_name realName,
		CASE
		WHEN
		(LENGTH(t2.id_card))=15 THEN
		if(MOD(SUBSTR(t2.id_card,15,1),2),'女','男')
		WHEN (LENGTH(t2.id_card))=18
		THEN
		if(MOD(SUBSTR(t2.id_card,17,1),2),'女','男')
		ELSE '身份证号不正确'
		END sex,
		t2.mobile,
		t3.sku_erp_Code erpCode,
		t3.third_party_id  thirdPartyId,
		t4.images_original imagesOriginal,
		t3.sku_price skuPrice,
		t3.sku_name skuName,
		t3.sku_head_thumbnail
		skuHeadThumbnail,
		t3.sku_count skuCount,
		t3.sku_count*t3.sku_price
		totalPrice,
		t2.id_card idCard ,
		'TYFQ' custSource,
		'' creditCard ,
		''
		otherTel,
		'' custComment,
		'' bankExtract ,
		'' giftInfo,
		'' receipt ,
		t6.name brandName,
		t7.amount discount ,
		po.code pickCode,
		po.status
		pickupStatus,
		pt.name pickupPointName,
		pt.address pickupPointAddress
		from t_order_cancellation t0
		left join t_order t1 on t0.order_id =
		t1.id
		left join t_user t2 on t2.id = t1.cust_id
		left join t_order_sku t3
		on t1.id = t3.order_id
		left join t_sku t4 on t3.sku_id = t4.id
		left join
		t_spu t5 on t4.spu_id = t5.id
		left join t_category t6 on t5.category_id
		= t6.id
		left join t_order_payment t7 on t7.order_id = t1.id and
		t7.category=3 and t7.type =11
		left join t_pickup_order po on
		po.order_id = t1.id
		left join t_pickup_point pt on po.pickup_point_id =
		pt.id
		where t0.id = #{id ,jdbcType=INTEGER}
	</select>
	<!-- 退货订单详细 end -->
	<!-- 获取订单状态 判断是否可以操作 start -->
	<select id="getOrderCancelStatus" parameterType="java.util.Map"
		resultType="java.util.Map">
		select t1.id ,t1.status ,t2.id orderId, t2.cust_id custId,t2.stage_id
		stageId,
		case
		when t1.status = '0' then '待审核'
		when t1.status = '1' then
		'已确认'
		when
		t1.status = '2' then '已拒绝'
		when t1.status = '3' then '待入库'
		when
		t1.status = '4' then '待退款'
		when t1.status = '5' then '已退款'
		else
		'异常信息'
		end statusText ,
		t1.type,case
		when t1.type = '1' then '申请取消'
		when
		t1.type
		= '2' then '申请退货'
		end typeText
		from t_order_cancellation t1
		left
		join t_order t2 on t1.order_id = t2.id
		where t1.id in
		<if test="ids != null and  ids !=''">
			<foreach item="item" index="index" collection="ids" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
	</select>
	<!-- 获取订单状态 判断是否可以操作 end -->
	<!-- 判断订单表是否可以做取消操作 -->
	<select id="getOrderCancelStatusByOrderId" parameterType="java.lang.Integer"
		resultType="java.util.Map">
		select status cancelStatus ,id ,type cancelType from
		t_order_cancellation
		where id= (select max(id) id from
		t_order_cancellation where order_id =
		#{orderId ,jdbcType=INTEGER} )
	</select>

	<select id="getCancelMaxId" resultType="java.lang.Integer">
		select ifnull(max(id),0)
		id from t_order_cancellation
	</select>

	<!-- 修改退货时间 -->
	<update id="cancel">
		update t_order set return_time = now() where id =
		#{id}
	</update>
	<!-- 以下为新方法 -->
	<sql id="Select_Base_Column">
		id,
		order_id,
		no,
		reason ,
		pics ,
		create_time,
		update_time,
		reason_type,
		status
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Select_Base_Column"></include>
		from t_order_cancellation
		where id = #{id}
	</select>
</mapper>