<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tyiti.easycommerce.repository.CouponRecordDao">
	<resultMap id="BaseResultMap" type="com.tyiti.easycommerce.entity.CouponRecord">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="coupon_id" property="couponId" jdbcType="INTEGER" />
		<result column="cust_id" property="custId" jdbcType="INTEGER" />
		<result column="coupon_code" property="couponCode" jdbcType="VARCHAR" />
		<result column="receive_time" property="receiveTime" jdbcType="TIMESTAMP" />
		<result column="is_used" property="isUsed" jdbcType="INTEGER" />
		<result column="use_time" property="useTime" jdbcType="TIMESTAMP" />
		<result column="expire_time" property="expireTime" jdbcType="TIMESTAMP" />
		<result column="is_due" property="isDue" jdbcType="INTEGER" />
		<result column="invalid" property="invalid" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, coupon_id, cust_id,coupon_code, receive_time,
		is_used,
		use_time, expire_time,
		is_due, invalid, create_time,
		update_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_coupon_record
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		t_coupon_record
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.tyiti.easycommerce.entity.CouponRecord">
		insert into t_coupon_record
		(id, coupon_id, cust_id, coupon_code, receive_time, is_used,
		use_time, expire_time, is_due,
		invalid, create_time, update_time
		)
		values (#{id,jdbcType=INTEGER}, #{couponId,jdbcType=INTEGER},
		#{custId,jdbcType=INTEGER},
		#{couponCode,jdbcType=VARCHAR}, #{receiveTime,jdbcType=TIMESTAMP},
		#{isUsed,jdbcType=INTEGER},
		#{useTime,jdbcType=TIMESTAMP},
		#{expireTime,jdbcType=TIMESTAMP}, #{isDue,jdbcType=INTEGER},
		#{invalid,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.tyiti.easycommerce.entity.CouponRecord">
		insert into t_coupon_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="couponId != null">
				coupon_id,
			</if>
			<if test="custId != null">
				cust_id,
			</if>
			<if test="couponCode != null">
				coupon_code,
			</if>
			<if test="receiveTime != null">
				receive_time,
			</if>
			<if test="isUsed != null">
				is_used,
			</if>
			<if test="useTime != null">
				use_time,
			</if>
			<if test="expireTime != null">
				expire_time,
			</if>
			<if test="isDue != null">
				is_due,
			</if>
			<if test="invalid != null">
				invalid,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="couponId != null">
				#{couponId,jdbcType=INTEGER},
			</if>
			<if test="custId != null">
				#{custId,jdbcType=INTEGER},
			</if>
			<if test="couponCode != null">
				#{couponCode,jdbcType=VARCHAR},
			</if>
			<if test="receiveTime != null">
				#{receiveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isUsed != null">
				#{isUsed,jdbcType=INTEGER},
			</if>
			<if test="useTime != null">
				#{useTime,jdbcType=TIMESTAMP},
			</if>
			<if test="expireTime != null">
				#{expireTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDue != null">
				#{isDue,jdbcType=INTEGER},
			</if>
			<if test="invalid != null">
				#{invalid,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.tyiti.easycommerce.entity.CouponRecord">
		update t_coupon_record
		<set>
			<if test="couponId != null">
				coupon_id = #{couponId,jdbcType=INTEGER},
			</if>
			<if test="custId != null">
				cust_id = #{custId,jdbcType=INTEGER},
			</if>
			<if test="couponCode != null">
				coupon_code = #{couponCode,jdbcType=VARCHAR},
			</if>
			<if test="receiveTime != null">
				receive_time = #{receiveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isUsed != null">
				is_used = #{isUsed,jdbcType=INTEGER},
			</if>
			<if test="useTime != null">
				use_time = #{useTime,jdbcType=TIMESTAMP},
			</if>
			<if test="expireTime != null">
				expire_time = #{expireTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDue != null">
				is_due = #{isDue,jdbcType=INTEGER},
			</if>
			<if test="invalid != null">
				invalid = #{invalid,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.tyiti.easycommerce.entity.CouponRecord">
		update
		t_coupon_record
		set coupon_id = #{couponId,jdbcType=INTEGER},
		cust_id =
		#{custId,jdbcType=INTEGER},
		coupon_code =
		#{couponCode,jdbcType=VARCHAR},
		receive_time =
		#{receiveTime,jdbcType=TIMESTAMP},
		is_used =
		#{isUsed,jdbcType=INTEGER},
		use_time = #{useTime,jdbcType=TIMESTAMP},
		expire_time = #{expireTime,jdbcType=TIMESTAMP},
		is_due =
		#{isDue,jdbcType=INTEGER},
		invalid = #{invalid,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 查询用户领取优惠券数量 -->
	<select id="selCountByCustId" resultType="java.lang.Long">
		select count(*)
		from
		t_coupon_record where couponId = #{couponId} and mobile = #{mobile}
	</select>
	<!-- 查询手机号是否存在 -->
	<select id="selCountByMobile" resultType="java.lang.Long">
		select count(*)
		from
		t_user where mobile = #{mobile} and invalid = 0
	</select>

	<insert id="insertBatchRecord" parameterType="java.util.List">
		insert into t_coupon_record
		(coupon_id,coupon_code,create_time,invalid)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.couponId},#{item.couponCode},now(),0)
		</foreach>
	</insert>

	<!-- 分页查询 -->
	<sql id="Detail_Column_List">
		r.id, i.name couponName, u.mobile, r.coupon_code couponCode,
		r.receive_time receiveTime,
		case 
			when i.time_type = 1 then  concat(DATE_FORMAT(i.start_time,'%Y-%m-%d %H:%i:%s'),'--',DATE_FORMAT(i.expire_time,'%Y-%m-%d %H:%i:%s'))
			when i.time_type = 2 then  concat(DATE_FORMAT(r.receive_time,'%Y-%m-%d %H:%i:%s'),'--',DATE_FORMAT(r.expire_time,'%Y-%m-%d %H:%i:%s'))
		end expireTime,
		DATE_FORMAT(i.receive_start_time,'%Y-%m-%d %H:%i:%s') receiveStartTime,
		DATE_FORMAT(i.receive_end_time,'%Y-%m-%d %H:%i:%s') receiveEndTime,
		case 
			when i.type = 2 then concat('满',threshold,'减',discount)
			when i.type = 4 then discount 
			end discount , 
		case 
			when i.time_type = 1 then concat(DATE_FORMAT(i.start_time,'%Y-%m-%d %H:%i:%s'),'--',DATE_FORMAT(i.expire_time,'%Y-%m-%d %H:%i:%s'))
			when i.time_type = 2 then concat(expire_in_days,'天')
			end inTime ,
		case 
			when i.scope = 1  then '全场通用'
			when i.scope = 2  then 'SKU专用'
			when i.scope = 3  then '标签专用'
			end scopeText,
		case when i.type = 1 then '优惠券'
			 when i.type = 2 then '优惠码'
			 when i.type = 3 then '代金券'
			 when i.type = 4 then '代金码'
			 end typeText ,
		case
		when r.is_used = '0' then '未使用'
		when r.is_used = '1'
		then '已使用'
		else
		'异常信息' end usedText ,
		r.is_used isUsed, r.use_time useTime ,t4.order_id orderId,
		case when now()&gt;r.expire_time then 1
			when now() &lt; r.expire_time then 0 end isDue 
	</sql>
	<sql id="where_columns">
		where r.invalid = 0
		<if test="couponId != null and  couponId !=''">
			and r.coupon_id =#{couponId}
		</if>
		<if test="report != null and  report !=''">
			 and is_used = 0 and is_due = 0
		</if>
		<if test="mobile != null and  mobile !=''">
			and u.mobile like
			CONCAT(CONCAT('%',#{mobile,jdbcType=VARCHAR}),'%')
		</if>
		<if test="couponCode != null and  couponCode !=''">
			and r.coupon_code like
			CONCAT(CONCAT('%',#{couponCode,jdbcType=VARCHAR}),'%')
		</if>
		<if test="isUsed != null and  isUsed !=''">
			and r.is_used  = #{isUsed ,jdbcType=INTEGER }
		</if>
		<if test="isDue == 0">
			and  r.expire_time &gt;now()
		</if>
		<if test="isDue == 1">
			and   r.expire_time &lt;now()
		</if>
		<if test="couponName != null and  couponName !=''">
			and r.coupon_id in(select id from t_coupon where name like
			CONCAT(CONCAT('%',#{couponName,jdbcType=VARCHAR}),'%'))
		</if>
		<if test="scope != null and  scope !=''">
			and r.coupon_id in(select id from t_coupon where scope =
			#{scope})
		</if>
		<if test="couponType != null and  couponType !=''">
			and r.coupon_id in(select id from t_coupon where type =
			#{couponType})
		</if>
	</sql>
	<sql id="order_columns">
		<if test="sort =='couponCode'">
			ORDER BY r.coupon_code ${order}
		</if>
		<if test="sort =='isUsed'">
			ORDER BY r.is_used ${order}
		</if>
	</sql>
	<select id="selectInfoListByPage" parameterType="java.util.Map"
		resultType="java.util.Map">
		select
		<include refid="Detail_Column_List" />
		from t_coupon_record r
		left join t_coupon i on i.id = r.coupon_id
		left join t_user u on u.id = r.cust_id
		left join t_order_payment t4 on t4.source = r.id and t4.status = 1 
		<include refid="where_columns"></include>
		<if test="sort != null and sort != ''">
			<include refid="order_columns" />
		</if>
		<if test="limit != null  and offset != null ">
			LIMIT #{offset},#{limit}
		</if>
	</select>


	<select id="selectInfoListCountByPage" parameterType="java.util.Map"
		resultType="java.lang.Long">
		select count(*)
		from t_coupon_record r
		left join t_coupon i on i.id = r.coupon_id
		left join t_user u on u.id = r.cust_id
		<include refid="where_columns"></include>
	</select>
</mapper>