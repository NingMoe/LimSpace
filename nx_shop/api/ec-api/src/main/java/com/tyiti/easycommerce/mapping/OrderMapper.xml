<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tyiti.easycommerce.repository.OrderDao">
	<resultMap id="BaseResultMap" type="com.tyiti.easycommerce.entity.Order">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="no" property="no" jdbcType="INTEGER" />
		<result column="cust_id" property="custId" jdbcType="INTEGER" />
		<result column="amount" property="amount" jdbcType="DECIMAL" />
		<result column="third_party_amount" property="thirdPartyAmount"
			jdbcType="DECIMAL" />
		<result column="down_payment" property="downPayment" jdbcType="DECIMAL" />
		<result column="installment_amount" property="installmentAmount"
			jdbcType="DECIMAL" />
		<result column="installment_months" property="installmentMonths"
			jdbcType="INTEGER" />
		<result column="down_payment_payed" property="downPaymentPayed"
			jdbcType="BOOLEAN" />
		<result column="installment_payed" property="installmentPayed"
			jdbcType="BOOLEAN" />
		<result column="down_payment_time" property="downPaymentTime"
			jdbcType="TIMESTAMP" />
		<result column="installment_time" property="installmentTime"
			jdbcType="TIMESTAMP" />
		<result column="pay_method" property="payMethod" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="invalid" property="invalid" jdbcType="BOOLEAN" />

		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="close_time" property="closeTime" jdbcType="TIMESTAMP" />

		<result column="address_name" property="addressName" jdbcType="VARCHAR" />
		<result column="address_mobile" property="addressMobile"
			jdbcType="INTEGER" />
		<result column="address_full_text" property="addressFullText"
			jdbcType="VARCHAR" />
		<result column="address_zip" property="addressZip" jdbcType="VARCHAR" />

		<result column="logistics_no" property="logisticsNo" jdbcType="VARCHAR" />
		<result column="logistics_company" property="logisticsCompany"
			jdbcType="VARCHAR" />
		<result column="stage_id" property="stageId" jdbcType="VARCHAR" />
		<result column="installment_rate" property="installmentRate"
			jdbcType="DECIMAL" />
		<result column="invoice_title" property="invoiceTitle"
			jdbcType="VARCHAR" />
		<result column="invoice_type" property="invoiceType" jdbcType="INTEGER" />
		<result column="invoice_status" property="invoiceStatus"
			jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="ResultOrderSkuMap" type="com.tyiti.easycommerce.entity.Order">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="no" property="no" jdbcType="INTEGER" />
		<result column="cust_id" property="custId" jdbcType="INTEGER" />
		<result column="amount" property="amount" jdbcType="DECIMAL" />
		<result column="down_payment" property="downPayment" jdbcType="DECIMAL" />
		<result column="installment_amount" property="installmentAmount"
			jdbcType="DECIMAL" />
		<result column="installment_months" property="installmentMonths"
			jdbcType="INTEGER" />
		<result column="down_payment_payed" property="downPaymentPayed"
			jdbcType="BOOLEAN" />
		<result column="installment_payed" property="installmentPayed"
			jdbcType="BOOLEAN" />
		<result column="down_payment_time" property="downPaymentTime"
			jdbcType="TIMESTAMP" />
		<result column="installment_time" property="installmentTime"
			jdbcType="TIMESTAMP" />
		<result column="pay_method" property="payMethod" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="invalid" property="invalid" jdbcType="BOOLEAN" />
		<result column="secondStatus" property="secondStatus" jdbcType="INTEGER" />
		<result column="cancellationType" property="cancellationType"
			jdbcType="INTEGER" />

		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="close_time" property="closeTime" jdbcType="TIMESTAMP" />

		<result column="address_name" property="addressName" jdbcType="VARCHAR" />
		<result column="address_mobile" property="addressMobile"
			jdbcType="INTEGER" />
		<result column="address_full_text" property="addressFullText"
			jdbcType="VARCHAR" />
		<result column="address_zip" property="addressZip" jdbcType="VARCHAR" />

		<result column="invoice_title" property="invoiceTitle"
			jdbcType="VARCHAR" />
		<result column="invoice_type" property="invoiceType" jdbcType="INTEGER" />
		<result column="invoice_status" property="invoiceStatus"
			jdbcType="INTEGER" />

		<result column="logistics_no" property="logisticsNo" jdbcType="VARCHAR" />
		<result column="logistics_company" property="logisticsCompany"
			jdbcType="VARCHAR" />
		<result column="stage_id" property="stageId" jdbcType="VARCHAR" />
		<result column="installment_rate" property="installmentRate"
			jdbcType="DECIMAL" />
		<result column="pickup_status" property="pickupStatus"
			jdbcType="INTEGER" />
		<result column="reasonType" property="reasonType" jdbcType="INTEGER" />
		<collection property="orderSku"
			ofType="com.tyiti.easycommerce.entity.OrderSku" resultMap="OrderSkuMap">
		</collection>
	</resultMap>

	<resultMap id="OrderSkuMap" type="com.tyiti.easycommerce.entity.OrderSku">
		<id column="s_id" property="id" jdbcType="INTEGER" />
		<result column="s_order_id" property="orderId" jdbcType="INTEGER" />
		<result column="s_sku_id" property="skuId" jdbcType="INTEGER" />
		<result column="s_sku_name" property="skuName" jdbcType="VARCHAR" />
		<result column="s_sku_description" property="skuDescription"
			jdbcType="VARCHAR" />
		<result column="s_sku_detail" property="skuDetail" jdbcType="VARCHAR" />
		<result column="s_sku_erp_code" property="skuErpCode" jdbcType="VARCHAR" />
		<result column="s_sku_head_thumbnail" property="skuHeadThumbnail"
			jdbcType="VARCHAR" />
		<result column="s_sku_count" property="skuCount" jdbcType="INTEGER" />
		<result column="s_sku_price" property="skuPrice" jdbcType="DECIMAL" />
		<result column="s_sku_original_price" property="skuOriginalPrice"
			jdbcType="DECIMAL" />
		<result column="s_sku_attribute" property="skuAttribute"
			jdbcType="VARCHAR" />
	</resultMap>

	<sql id="select_column_list">
		id, no, cust_id, amount,third_party_amount, down_payment,
		installment_amount,
		installment_months, down_payment_payed,
		installment_payed,
		down_payment_time, installment_time, pay_method,
		status, invalid,
		create_time, close_time, address_name, address_mobile,
		address_full_text, address_zip, logistics_no,
		logistics_company,stage_id,installment_rate,invoice_title,invoice_type,invoice_status
	</sql>

	<sql id="insert_column_list">
		parent_id, name, invalid
	</sql>

	<sql id="order_column_list">
		o.id, o.no, o.cust_id, o.amount,
		o.third_party_amount,o.down_payment,
		o.installment_amount,
		o.installment_months, o.down_payment_payed,
		o.installment_payed,
		o.down_payment_time, o.installment_time,
		o.pay_method, o.status,
		o.invalid, o.create_time, o.close_time,
		o.address_name,
		o.address_mobile, o.address_full_text, o.address_zip,
		o.logistics_no,
		o.logistics_company,o.stage_id,o.installment_rate,
		o.invoice_title,o.invoice_type,o.invoice_status
	</sql>

	<sql id="sku_column_list">
		s.id as s_id, s.order_id as s_order_id, s.sku_id as
		s_sku_id, s.sku_name
		as s_sku_name, s.sku_description as
		s_sku_description, s.sku_detail as
		s_sku_detail, s.sku_erp_code as
		s_sku_erp_code, s.sku_head_thumbnail
		as s_sku_head_thumbnail,
		s.sku_count as s_sku_count, s.sku_price as
		s_sku_price,
		s.sku_original_price as s_sku_original_price,
		s.sku_attribute as
		s_sku_attribute
	</sql>

	<sql id="cancellation_column_list">
		c.status as secondStatus,
		c.type as
		cancellationType,c.reason,c.pics,c.reason_type reasonType
	</sql>

	<select id="getById" resultType="com.tyiti.easycommerce.entity.Order"
		resultMap="BaseResultMap">
		select
		<include refid="select_column_list" />
		from t_order where id = #{id}
	</select>

	<select id="orderList" resultType="com.tyiti.easycommerce.entity.Order"
		resultMap="ResultOrderSkuMap">
		select
		<include refid="order_column_list" />
		,p.status pickup_status,
		<include refid="cancellation_column_list" />
		,
		<include refid="sku_column_list" />
		from t_order o
		LEFT outer join t_order_sku s on o.id=s.order_id
		LEFT
		outer join t_order_cancellation c on o.id=c.order_id and c.status != 2
		left join t_pickup_order p on p.order_id = o.id
		where 1=1 and
		<if test="custId != null">
			o.cust_id = #{custId} and
		</if>
		<if test="status != null">
			o.status = #{status} and
		</if>
		o.invalid = 0
		order by o.create_time desc
		<if test="limit != null and limit != '' and offset != null and offset !=''">
			LIMIT #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
		</if>
	</select>


	<select id="orderListReturn" resultType="com.tyiti.easycommerce.entity.Order"
		resultMap="ResultOrderSkuMap">
		select
		<include refid="order_column_list" />
		,p.status pickup_status,
		<include refid="cancellation_column_list" />
		,
		<include refid="sku_column_list" />
		from t_order o
		LEFT outer join t_order_sku s on o.id=s.order_id
		LEFT
		outer join t_order_cancellation c on o.id=c.order_id and c.status != 2
		left join t_pickup_order p on p.order_id = o.id
		<where>
			<if test="custId != null">
				o.cust_id = #{custId} and
			</if>
			<if test="status != null">
				o.status = #{status} and
			</if>
		</where>
		o.invalid = 0
		order by o.return_time desc
		<if test="limit != null and limit != '' and offset != null and offset !=''">
			LIMIT #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
		</if>
	</select>

	<select id="getByCriteria" resultType="com.tyiti.easycommerce.entity.Order"
		resultMap="BaseResultMap">
		select
		<include refid="select_column_list" />
		from t_order
		<where>
			<if test="custId != null">
				cust_id = #{custId}
			</if>
			<if test="status != null">
				and status = #{status}
			</if>
			<if test="invalid != null">
				and invalid = #{invalid}
			</if>
		</where>
	</select>

	<select id="getByCustIdOrderById" resultType="com.tyiti.easycommerce.entity.Order"
		resultMap="BaseResultMap">
		select
		<include refid="select_column_list" />
		from t_order
		<where>
			<if test="custId != null">
				cust_id = #{custId}
			</if>
		</where>
		order by id desc
		limit 1
	</select>

	<insert id="addOrder" parameterType="com.tyiti.easycommerce.entity.Order"
		useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		INSERT INTO t_order
		<trim prefix="(" suffix=")" suffixOverrides=",">
			no,
			cust_id,
			amount,
			status,
			<if test="thirdPartyAmount != null">
				third_party_amount,
			</if>
			<if test="downPayment != null">
				down_payment,
			</if>
			<if test="installmentAmount != null">
				installment_amount,
			</if>
			<if test="installmentMonths != null">
				installment_months,
			</if>
			<if test="downPaymentPayed != null">
				down_payment_payed,
			</if>
			<if test="installmentPayed != null">
				installment_payed,
			</if>
			<if test="downPaymentTime != null">
				down_payment_time,
			</if>
			<if test="installmentTime != null">
				installment_time,
			</if>
			<if test="payMethod != null">
				pay_method,
			</if>
			<if test="invalid != null">
				invalid,
			</if>
			<if test="closeTime != null">
				close_time,
			</if>
			address_name,
			address_mobile,
			address_full_text,
			<if test="addressZip != null">
				address_zip,
			</if>
			<if test="logisticsNo != null">
				logistics_no,
			</if>
			<if test="logisticsCompany != null">
				logistics_company,
			</if>
			<if test="installmentRate != null">
				installment_rate,
			</if>
			<if test="invoiceTitle != null">
				invoice_title,
			</if>
			<if test="invoiceType != null">
				invoice_type,
			</if>
			<if test="invoiceStatus != null">
				invoice_status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{no},
			#{custId},
			#{amount},
			#{status},
			<if test="thirdPartyAmount != null">
				#{thirdPartyAmount},
			</if>
			<if test="downPayment != null">
				#{downPayment},
			</if>
			<if test="installmentAmount != null">
				#{installmentAmount},
			</if>
			<if test="installmentMonths != null">
				#{installmentMonths},
			</if>
			<if test="downPaymentPayed != null">
				#{downPaymentPayed},
			</if>
			<if test="installmentPayed != null">
				#{installmentPayed},
			</if>
			<if test="downPaymentTime != null">
				#{downPaymentTime},
			</if>
			<if test="installmentTime != null">
				#{installmentTime},
			</if>
			<if test="payMethod != null">
				#{payMethod},
			</if>
			<if test="invalid != null">
				#{invalid},
			</if>
			<if test="closeTime != null">
				#{closeTime},
			</if>
			#{addressName},
			#{addressMobile},
			#{addressFullText},
			<if test="addressZip != null">
				#{addressZip},
			</if>
			<if test="logisticsNo != null">
				#{logisticsNo},
			</if>
			<if test="logisticsCompany != null">
				#{logisticsCompany},
			</if>
			<if test="installmentRate != null">
				#{installmentRate},
			</if>
			<if test="invoiceTitle != null">
				#{invoiceTitle},
			</if>
			<if test="invoiceType != null">
				#{invoiceType},
			</if>
			<if test="invoiceStatus != null">
				#{invoiceStatus},
			</if>
		</trim>
	</insert>

	<update id="updateOrder" parameterType="com.tyiti.easycommerce.entity.Order">
		update t_order
		<set>
			<if test="thirdPartyAmount != null">
				third_party_amount =#{thirdPartyAmount,jdbcType=DECIMAL},
			</if>
			<if test="downPaymentTime != null">
				down_payment_time =
				#{downPaymentTime,jdbcType=TIMESTAMP},
			</if>
			<if test="downPaymentPayed != null">
				down_payment_payed =
				#{downPaymentPayed,jdbcType=BOOLEAN},
			</if>
			<if test="installmentTime != null">
				installment_time = #{installmentTime,jdbcType=TIMESTAMP},
			</if>
			<if test="installmentPayed != null">
				installment_payed = #{installmentPayed,jdbcType=BOOLEAN},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="stageId != null">
				stage_id = #{stageId,jdbcType=VARCHAR},
			</if>
			<if test="invoiceTitle != null">
				invoice_title = #{invoiceTitle,jdbcType=VARCHAR},
			</if>
			<if test="invoiceType != null">
				invoice_type = #{invoiceType,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="getByNo" resultType="com.tyiti.easycommerce.entity.Order"
		resultMap="BaseResultMap">
		select
		<include refid="select_column_list" />
		from t_order where no = #{no,jdbcType=VARCHAR}
	</select>

	<update id="updateNameAndMobile">
		update t_order
		<set>
			<if test="mobile != null">
				address_mobile = #{mobile},
			</if>
			<if test="name != null">
				address_name = #{name},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<update id="updateByPrimaryKeySelective" parameterType="com.tyiti.easycommerce.entity.Order">
		update t_order
		<set>
			<if test="no != null">
				no = #{no,jdbcType=VARCHAR},
			</if>
			<if test="custId != null">
				cust_id = #{custId,jdbcType=INTEGER},
			</if>
			<if test="amount != null">
				amount = #{amount,jdbcType=DECIMAL},
			</if>
			<if test="thirdPartyAmount != null">
				third_party_amount = #{thirdPartyAmount,jdbcType=DECIMAL},
			</if>
			<if test="downPayment != null">
				down_payment = #{downPayment,jdbcType=DECIMAL},
			</if>
			<if test="installmentAmount != null">
				installment_amount = #{installmentAmount,jdbcType=DECIMAL},
			</if>
			<if test="installmentMonths != null">
				installment_months = #{installmentMonths,jdbcType=INTEGER},
			</if>
			<if test="installmentRate != null">
				installment_rate = #{installmentRate,jdbcType=DECIMAL},
			</if>
			<if test="downPaymentPayed != null">
				down_payment_payed = #{downPaymentPayed,jdbcType=BIT},
			</if>
			<if test="installmentPayed != null">
				installment_payed = #{installmentPayed,jdbcType=BIT},
			</if>
			<if test="downPaymentTime != null">
				down_payment_time = #{downPaymentTime,jdbcType=TIMESTAMP},
			</if>
			<if test="installmentTime != null">
				installment_time = #{installmentTime,jdbcType=TIMESTAMP},
			</if>
			<if test="payMethod != null">
				pay_method = #{payMethod,jdbcType=TINYINT},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
			<if test="invalid != null">
				invalid = #{invalid,jdbcType=BIT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="closeTime != null">
				close_time = #{closeTime,jdbcType=TIMESTAMP},
			</if>
			<if test="addressName != null">
				address_name = #{addressName,jdbcType=VARCHAR},
			</if>
			<if test="addressMobile != null">
				address_mobile = #{addressMobile,jdbcType=CHAR},
			</if>
			<if test="addressFullText != null">
				address_full_text = #{addressFullText,jdbcType=VARCHAR},
			</if>
			<if test="addressZip != null">
				address_zip = #{addressZip,jdbcType=INTEGER},
			</if>
			<if test="logisticsNo != null">
				logistics_no = #{logisticsNo,jdbcType=VARCHAR},
			</if>
			<if test="logisticsCompany != null">
				logistics_company = #{logisticsCompany,jdbcType=VARCHAR},
			</if>
			<if test="receiptTime != null">
				receipt_time = #{receiptTime,jdbcType=TIMESTAMP},
			</if>
			<if test="returnTime != null">
				return_time = #{returnTime,jdbcType=TIMESTAMP},
			</if>
			<if test="stageId != null">
				stage_id = #{stageId,jdbcType=VARCHAR},
			</if>
			<if test="invoiceTitle != null">
				invoice_title = #{invoiceTitle,jdbcType=VARCHAR},
			</if>
			<if test="invoiceType != null">
				invoice_type = #{invoiceType,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.tyiti.easycommerce.entity.Order">
		update t_order
		set no = #{no,jdbcType=VARCHAR},
		cust_id = #{custId,jdbcType=INTEGER},
		amount = #{amount,jdbcType=DECIMAL},
		third_party_amount = #{thirdPartyAmount,jdbcType=DECIMAL},
		down_payment = #{downPayment,jdbcType=DECIMAL},
		installment_amount = #{installmentAmount,jdbcType=DECIMAL},
		installment_months = #{installmentMonths,jdbcType=INTEGER},
		installment_rate = #{installmentRate,jdbcType=DECIMAL},
		down_payment_payed = #{downPaymentPayed,jdbcType=BIT},
		installment_payed = #{installmentPayed,jdbcType=BIT},
		down_payment_time = #{downPaymentTime,jdbcType=TIMESTAMP},
		installment_time = #{installmentTime,jdbcType=TIMESTAMP},
		pay_method = #{payMethod,jdbcType=TINYINT},
		status = #{status,jdbcType=TINYINT},
		invalid = #{invalid,jdbcType=BIT},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		close_time = #{closeTime,jdbcType=TIMESTAMP},
		address_name = #{addressName,jdbcType=VARCHAR},
		address_mobile = #{addressMobile,jdbcType=CHAR},
		address_full_text = #{addressFullText,jdbcType=VARCHAR},
		address_zip = #{addressZip,jdbcType=INTEGER},
		logistics_no = #{logisticsNo,jdbcType=VARCHAR},
		logistics_company = #{logisticsCompany,jdbcType=VARCHAR},
		receipt_time = #{receiptTime,jdbcType=TIMESTAMP},
		return_time = #{returnTime,jdbcType=TIMESTAMP},
		stage_id = #{stageId,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<!--管理端列表count -->
	<select id="selectOrderCount" parameterType="java.util.Map"
		resultType="java.lang.Long">
		select count(*)
		from t_order t1 left join t_user t2 on t1.cust_id = t2.id
		left join
		t_order_sku t3 on t1.id =t3.order_id
		left join
		( select id ,order_id , max(create_time) , type, status from
		t_order_cancellation group by order_id )t4
		on t4.order_id = t1.id
		<include refid="where_columns" />
	</select>
	<!-- 管理端 查询列表 start -->
	<select id="selectOrderList" parameterType="java.util.Map"
		resultType="java.util.Map">
		select
		<include refid="select_columns" />
		from t_order t1 left join t_user t2 on t1.cust_id = t2.id
		left join
		t_order_sku t3 on t1.id =t3.order_id
		left join
		( select id ,order_id , type, status from t_order_cancellation
		where id in (select max(id) from t_order_cancellation
		group by order_id ) )t4
		on t4.order_id = t1.id
		<include refid="where_columns" />
		<if test="sort != null and sort != ''">
			<include refid="order_columns" />
		</if>
		<if test="sort == null or sort == ''">
			order by t1.create_time desc
		</if>
		<if test="limit != null and limit != '' and offset != null and offset !=''">
			LIMIT #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
		</if>
	</select>
	<!-- 管理端 查询列表 end -->


	<!-- 确定 、制单导出 修改状态 start -->
	<update id="updateByIds" parameterType="java.util.Map">
		update t_order
		set status = #{status,jdbcType=INTEGER}
		where id in
		<if test="ids != null and  ids !=''">
			<foreach close=")" collection="ids" index="index" item="item"
				open="(" separator=",">
				#{item}
			</foreach>
		</if>
	</update>
	<!-- 制单导出 修改状态 end -->
	<!-- 订单条件查询 显示字段 start -->
	<sql id="select_columns">
		t1.id,
		t1.no,
		t1.create_time createTime,
		t3.sku_name skuName,
		t1.installment_amount installmentAmount,
		t1.installment_months
		installmentMonths,
		t1.down_payment downPayment,
		t3.sku_count skuCount,
		t3.sku_price skuPrice,
		case
		when t1.pay_method = '1' then '全款'
		when
		t1.pay_method = '2' then '全分期'
		when t1.pay_method = '3' then '首付+分期'
		else '异常信息' end payMethodText ,
		t1.pay_method payMethod,
		t2.real_name
		realName,
		t2.mobile ,
		case
		when t1.status = '0' then '草稿'
		when t1.status =
		'1' then '未付款'
		when t1.status = '2' then '已付款'
		when t1.status = '3' then
		'已确认'
		when t1.status = '4' then '已制单'
		when t1.status = '5' then '已发货'
		when t1.status = '6' then '已签收'
		when t1.status = '7' then '已失效'
		when
		t1.status = '8' then '已退货'
		when t1.status = '9' then '已取消'
		else '异常信息'
		end statusText ,
		t1.status status ,
		t4.type cancelType,
		case
		when t4.type = '1' then '取消订单'
		when t4.type = '2' then '退货申请'
		else '' end cancelTypeText
		,t4.status cancelStatus ,
		case
		when t4.status = '0' then '已提交'
		when t4.status = '1'
		then '已确认'
		when t4.status = '2' then '已拒绝'
		when t4.status = '3' then
		'待收货'
		when t4.status = '4' then '已收货'
		when t4.status = '5' then '完成'
		else '' end cancelStatusText
	</sql>
	<!-- 订单条件查询 显示字段 end -->
	<!-- 制单导出用 start -->
	<select id="selectOrderCountByIds" parameterType="java.util.Map"
		resultType="java.lang.Long">
		select count(*)
		from t_order t1 left join t_user t2 on t1.cust_id = t2.id
		left join
		t_order_sku t3 on t1.id =t3.order_id
		<include refid="where_columns" />
	</select>

	<select id="selectOrderListByIds" parameterType="java.util.Map"
		resultType="java.util.Map">
		select
		t1.id ,
		t1.no ,
		t1.create_time createTime,
		t1.status,
		t1.amount,
		t7.status cancelStatus,
		case
		when t1.status = '0' then '草稿'
		when t1.status = '1' then '未付款'
		when
		t1.status = '2' then '已付款'
		when t1.status = '3' then '已确认'
		when
		t1.status = '4' then '已制单'
		when t1.status = '5' then '已发货'
		when
		t1.status = '6' then '已签收'
		when t1.status = '7' then '已失效'
		when
		t1.status = '8' then '已退货'
		when t1.status = '9' then '已取消'
		else '异常信息'
		end statusText ,
		t1.installment_months installmentMonths,
		t1.down_payment downPayment,
		t1.down_payment_payed downPaymentPayed,
		CONCAT(
		case
		when t1.down_payment_payed = 0 then '首付未付'
		when t1.down_payment_payed = 1 then '首付已付'
		else '首付信息异常' end ,
		case
		when t1.installment_payed = 0 then '分期未付'
		when t1.installment_payed = 1 then '分期已付'
		else '首付信息异常' end ) payedStatus,
		t1.installment_payed installmentPayed,
		t1.address_name addressName,
		t1.address_mobile addressMobile,
		t1.address_zip addressZip,
		t1.address_full_text addressFullText,
		t2.real_name realName,
		CASE
		WHEN (LENGTH(t2.id_card))=15 THEN
		if(MOD(SUBSTR(t2.id_card,15,1),2),'女','男')
		WHEN (LENGTH(t2.id_card))=18 THEN
		if(MOD(SUBSTR(t2.id_card,17,1),2),'女','男')
		ELSE '身份证号不正确'
		END sex,
		t2.mobile,
		t4.erp_code erpCode,
		t3.sku_name skuName,
		t3.sku_head_thumbnail skuHeadThumbnail,
		t3.sku_count skuCount,
		t3.sku_count*t3.sku_price totalPrice,
		t2.id_card idCard ,
		<if test="sys == 'ceb'">
			'CEBSHOP' custSource,
		</if>
		<if test="sys == 'tyfq'">
			'SSFQSHOP' custSource,
		</if>
		<if test="sys =='thb' ">
			'THBSHOP' custSource,
		</if>
		<if test="sys !='thb' and sys == 'tyfq' and sys == 'ceb'">
			'XXXSHOP' custSource,
		</if>
		'' creditCard ,
		'' otherTel,
		'' custComment,
		'' bankExtract ,
		'' giftInfo,
		'' receipt ,
		t6.name brandName
		from t_order t1
		left join t_user t2 on t2.id = t1.cust_id
		left join t_order_sku t3 on t1.id = t3.order_id
		left join t_sku t4 on t3.sku_id = t4.id
		left join t_spu t5 on t4.spu_id = t5.id
		left join t_category t6 on t5.category_id = t6.id
		left join
		( select id ,order_id , type, status from t_order_cancellation
		where id in (select max(id) from t_order_cancellation
		group by order_id ) )t7
		on t7.order_id = t1.id
		where 1=1
		<if test="ids != null and  ids !=''">
			and t1.id in
			<foreach close=")" collection="ids" index="index" item="item"
				open="(" separator=",">
				#{item}
			</foreach>
		</if>
	</select>
	<!-- 制单导出用 end -->
	<!-- 订单条件查询where start -->
	<sql id="where_columns">
		where 1=1
		<if test="skuName != null and  skuName !=''">
			and t3.sku_name like CONCAT(CONCAT('%',
			#{skuName,jdbcType=VARCHAR}),'%')
		</if>
		<if test="no != null and  no !=''">
			and t1.no=#{no,jdbcType=VARCHAR}
		</if>
		<if test="startTime != null and  startTime !=''">
			and t1.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null and  endTime !=''">
			and t1.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>

		<if test="mobile != null and  mobile !=''">
			and t2.mobile like CONCAT(CONCAT('%',
			#{mobile,jdbcType=VARCHAR}),'%')
		</if>
		<if test="status != null and  status !=''">
			and t1.status = #{status,jdbcType=VARCHAR}
			and (t4.status
			is null or (t4.status = 2 and t4.type = 1 ))
		</if>
		<if test="payMethod != null and  payMethod !=''">
			and t1.pay_method = #{payMethod,jdbcType=VARCHAR}
		</if>
		<if test="cancelStatus != null and  cancelStatus !=''">
			and t4.status = #{cancelStatus,jdbcType=VARCHAR}
		</if>
		<if test="cancelType != null and  cancelType !=''">
			and t4.type = #{cancelType,jdbcType=VARCHAR}
		</if>
	</sql>

	<!-- 订单条件查询where end -->

	<!-- 订单条件查询排序 start -->
	<sql id="order_columns">
		<if test="sort =='no'">
			ORDER BY t1.no ${order}
		</if>
		<if test="sort =='createTime'">
			ORDER BY t1.create_time ${order}
		</if>
		<if test="sort =='skuName'">
			ORDER BY t3.sku_name ${order}
		</if>
		<if test="sort =='installmentAmount'">
			ORDER BY t1.installment_amount ${order}
		</if>
		<if test="sort =='downPayment'">
			ORDER BY t1.down_payment ${order}
		</if>
		<if test="sort =='skeCount'">
			ORDER BY t3.sku_count ${order}
		</if>
		<if test="sort =='skuPrice'">
			ORDER BY t3.sku_price ${order}
		</if>
		<if test="sort =='realName'">
			ORDER BY t2.real_name ${order}
		</if>
		<if test="sort =='mobile'">
			ORDER BY t2.mobile ${order}
		</if>
		<if test="sort =='payMethod'">
			ORDER BY t1.pay_method ${order}
		</if>
		<if test="sort =='status'">
			ORDER BY t1.status ${order}
		</if>
	</sql>
	<!-- 订单条件查询排序 end -->
	<select id="orderDetail" resultType="com.tyiti.easycommerce.entity.Order"
		resultMap="ResultOrderSkuMap">
		select
		<include refid="order_column_list" />
		,
		<include refid="cancellation_column_list" />
		,
		<include refid="sku_column_list" />
		from t_order o
		LEFT outer join t_order_sku s on o.id=s.order_id
		LEFT
		outer join t_order_cancellation c on o.id=c.order_id and c.status != 2
		<where>
			<if test="custId != null">
				o.cust_id=#{custId} and
			</if>
			<if test="id != null">
				o.id = #{id} and
			</if>
		</where>
		invalid = 0
	</select>

	<!--查询订单详细列表 start <select id="orderDetail" resultType="java.util.Map"> 
		select t1.id , t1.no , t1.create_time createTime, t1.status, t7.status cancelStatus, 
		case when t1.status = '0' then '草稿' when t1.status = '1' then '未付款' when 
		t1.status = '2' then '已付款' when t1.status = '3' then '已确认' when t1.status 
		= '4' then '已制单' when t1.status = '5' then '已发货' when t1.status = '6' then 
		'已签收' when t1.status = '8' then '已退货' when t1.status = '9' then '已取消' else 
		'异常信息' end statusText , t1.installment_months installmentMonths, t1.down_payment 
		downPayment, t1.down_payment_payed downPaymentPayed, CONCAT( case when t1.down_payment_payed 
		= 0 then '首付未付' when t1.down_payment_payed = 1 then '首付已付' else '首付信息异常' 
		end , case when t1.installment_payed = 0 then '分期未付' when t1.installment_payed 
		= 1 then '分期已付' else '首付信息异常' end ) payedStatus, t1.installment_payed installmentPayed, 
		t1.address_name addressName, t1.address_mobile addressMobile, t1.address_zip 
		addressZip, t1.address_full_text addressFullText, t2.real_name realName, 
		CASE WHEN (LENGTH(t2.id_card))=15 THEN if(MOD(SUBSTR(t2.id_card,15,1),2),'女','男') 
		WHEN (LENGTH(t2.id_card))=18 THEN if(MOD(SUBSTR(t2.id_card,17,1),2),'女','男') 
		ELSE '身份证号不正确' END sex, t2.mobile, t4.erp_code erpCode, t3.sku_name skuName, 
		t3.sku_head_thumbnail skuHeadThumbnail, t3.sku_count skuCount, t3.sku_count*t3.sku_price 
		totalPrice, t2.id_card idCard , 'CEBSHOP' custSource, '' creditCard , '' 
		otherTel, '' custComment, '' bankExtract , '' giftInfo, '' receipt , t6.name 
		brandName from t_order t1 left join t_user t2 on t2.id = t1.cust_id left 
		join t_order_sku t3 on t1.id = t3.order_id left join t_sku t4 on t3.sku_id 
		= t4.id left join t_spu t5 on t4.spu_id = t5.id left join t_category t6 on 
		t5.category_id = t6.id left join ( select id ,order_id , type, status from 
		t_order_cancellation where id in (select max(id) from t_order_cancellation 
		group by order_id ) )t7 on t7.order_id = t1.id where t1.id =#{id,jdbcType=INTEGER} 
		</select> -->
	<!-- 查询订单详细列表 end -->

	<!-- 订单 取消 start -->
	<update id="orderCancel" parameterType="java.lang.Integer">
		update t_order
		set status = 9
		where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 订单 取消 end -->

	<!-- 订单 完成 start -->
	<update id="orderFinish" parameterType="java.lang.Integer">
		update t_order
		set status = 8
		where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 订单 完成 end -->
	<!-- 获取订单状态 判断是否可以操作 start -->
	<select id="getOrderStatus" parameterType="java.lang.Integer"
		resultType="java.util.Map">
		select t1.status ,t1.cust_id custId,t1.stage_id stageId, case
		when t1.status
		= '0' then '草稿'
		when t1.status = '1' then '未付款'
		when t1.status = '2'
		then '已付款'
		when t1.status = '3' then '已确认'
		when t1.status = '4' then
		'已制单'
		when t1.status = '5' then '已发货'
		when t1.status = '6' then '已签收'
		when t1.status = '7' then '已失效'
		when t1.status = '8' then '已退货'
		when
		t1.status = '9' then '已取消'
		else '异常信息' end statusText from t_order t1
		where t1.id = #{id,jdbcType=INTEGER}
	</select>
	<!-- 获取订单状态 判断是否可以操作 end -->

	<!-- 查看sku库存 -->
	<select id="getOrderSkuCount" parameterType="java.lang.Integer"
		resultType="java.util.Map">
		select t2.sku_count skuCount ,t2.sku_id skuId
		from t_order t1 left join t_order_sku t2
		on t1.id = t2.order_id
		where t1.id = #{id,jdbcType=INTEGER}
	</select>
	<!-- 修改sku 库存 -->

	<update id="updateSkuCount" parameterType="java.lang.Integer">
		update t_sku
		set inventory= inventory+ #{skuCount,jdbcType=INTEGER}
		where id= #{skuId,jdbcType=INTEGER}
	</update>
	<!--查询所有信息 -->
	<select id="findBillList" parameterType="java.lang.Integer"
		resultType="java.util.Map">
		select
		t_order.id, t_order.no, t_order.cust_id, t_order.amount,
		t_order.third_party_amount, t_order.down_payment,
		t_order.installment_amount, t_order.installment_months,
		t_order.installment_rate, t_order.down_payment_payed,
		t_order.installment_payed, t_order.down_payment_time,
		t_order.installment_time,
		t_order.pay_method, t_order.status, t_order.invalid, t_order.create_time,
		t_order.close_time, t_order.address_name, t_order.address_mobile,
		t_order.address_full_text, t_order.address_zip, t_order.logistics_no,
		t_order.logistics_company, t_order.receipt_time, t_order.return_time,
		t_order.stage_id,t_order_sku.sku_name ,t_sku_ext.field1
		from t_order
		inner JOIN t_order_sku ON t_order.id = t_order_sku.order_id
		inner join t_sku_ext on t_order_sku.sku_id=t_sku_ext.sku_id
		where t_order_sku.sku_erp_code =#{skuErpCode,jdbcType=VARCHAR}
		<if test="startReturnTime != null and startReturnTime != ''">
			and return_time >= #{startReturnTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endReturnTime != null and endReturnTime != ''">
			and <![CDATA[return_time <= #{endReturnTime,jdbcType=TIMESTAMP}]]>
		</if>
		<if test="startCloseTime != null and startCloseTime != ''">
			and close_time >= #{startCloseTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endCloseTime != null and endCloseTime != ''">
			and <![CDATA[close_time <= #{endCloseTime,jdbcType=TIMESTAMP}]]>
		</if>
	</select>

	<!-- 获取优惠金额 -->
	<select id="getDiscount" parameterType="java.lang.Integer"
		resultType="java.lang.Double">
		SELECT
		c.discount
		FROM
		t_order_payment p
		LEFT JOIN t_coupon_record r ON p.source = r.id
		LEFT JOIN t_coupon c ON r.coupon_id = c.id
		WHERE
		p.order_id = #{orderId,jdbcType=INTEGER}
	AND p.type = '11'
  </select>
  <!-- 购物车结算后一个订单多件商品    直接把后台接口拷贝过来了-->
  <resultMap id="CartResultMap" type="com.tyiti.easycommerce.entity.Order">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="no" property="no" jdbcType="INTEGER" />
		<result column="cust_id" property="custId" jdbcType="INTEGER" />
		<result column="stage_id" property="stageId" jdbcType="INTEGER" />
		<result column="amount" property="amount" jdbcType="DECIMAL" />
		<result column="third_party_amount" property="thirdPartyAmount"
			jdbcType="DECIMAL" />
		<result column="down_payment" property="downPayment" jdbcType="DECIMAL" />
		<result column="installment_amount" property="installmentAmount"
			jdbcType="DECIMAL" />
		<result column="installment_months" property="installmentMonths"
			jdbcType="INTEGER" />
		<result column="down_payment_payed" property="downPaymentPayed"
			jdbcType="BOOLEAN" />
		<result column="installment_payed" property="installmentPayed"
			jdbcType="BOOLEAN" />
		<result column="down_payment_time" property="downPaymentTime"
			jdbcType="TIMESTAMP" />
		<result column="installment_time" property="installmentTime"
			jdbcType="TIMESTAMP" />
		<result column="pay_method" property="payMethod" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="invalid" property="invalid" jdbcType="BOOLEAN" />

		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="close_time" property="closeTime" jdbcType="TIMESTAMP" />

		<result column="address_name" property="addressName" jdbcType="VARCHAR" />
		<result column="address_mobile" property="addressMobile"
			jdbcType="INTEGER" />
		<result column="address_full_text" property="addressFullText"
			jdbcType="VARCHAR" />
		<result column="address_zip" property="addressZip" jdbcType="VARCHAR" />
		<result column="invoice_title" property="invoiceTitle"
			jdbcType="VARCHAR" />
		<result column="invoice_type" property="invoiceType" jdbcType="INTEGER" />
		<result column="invoice_status" property="invoiceStatus"
			jdbcType="INTEGER" />
		<result column="logistics_no" property="logisticsNo" jdbcType="VARCHAR" />
		<result column="logistics_company" property="logisticsCompany"
			jdbcType="VARCHAR" />
		<result column="discount" property="discount" />
		<collection property="cancellation"
			javaType="com.tyiti.easycommerce.entity.OrderCancellation">
			<result column="cancelId" property="id" />
			<result column="cancelStatus" property="status" />
			<result column="cancelCreateTime" property="createTime" />
			<result column="cancelNo" property="no" />
		</collection>
		<collection property="orderSku"
			ofType="com.tyiti.easycommerce.entity.OrderSku">
			<result column="s_id" property="id" jdbcType="INTEGER" />
			<result column="order_id" property="orderId" jdbcType="INTEGER" />
			<result column="sku_id" property="skuId" jdbcType="INTEGER" />
			<result column="sku_name" property="skuName" jdbcType="VARCHAR" />
			<result column="sku_description" property="skuDescription"
				jdbcType="VARCHAR" />
			<result column="sku_detail" property="skuDetail" jdbcType="VARCHAR" />
			<result column="sku_erp_code" property="skuErpCode" jdbcType="VARCHAR" />
			<result column="sku_head_thumbnail" property="skuHeadThumbnail"
				jdbcType="VARCHAR" />
			<result column="sku_count" property="skuCount" jdbcType="INTEGER" />
			<result column="sku_price" property="skuPrice" jdbcType="DECIMAL" />
			<result column="sku_original_price" property="skuOriginalPrice"
				jdbcType="DECIMAL" />
			<result column="sku_attribute" property="skuAttribute"
				jdbcType="VARCHAR" />
			<result column="activity_type" property="activityType"
				jdbcType="INTEGER" />
			<result column="activity_id" property="activityId" jdbcType="INTEGER" />
			<result column="avg_price" property="avgPrice" jdbcType="DECIMAL" />
			<result column="fact_amount" property="factAmount" jdbcType="DECIMAL" />
			<result column="activity_id" property="activityId" jdbcType="INTEGER" />
			<result column="return_count" property="returnCount" jdbcType="INTEGER" />
		</collection>
	</resultMap>
	
	<sql id="order_column_sku">
		t1.id, t1.no, t1.cust_id, t1.amount, t1.third_party_amount,
		t1.down_payment,
		t1.installment_amount, t1.installment_months,
		t1.installment_rate, t1.down_payment_payed, t1.installment_payed,
		t1.down_payment_time,
		t1.installment_time,
		t1.pay_method, t1.status,
		t1.invalid, t1.create_time, t1.close_time, t1.address_name,
		t1.address_mobile,
		t1.address_full_text, t1.address_zip,
		t1.logistics_no, t1.logistics_company, t1.receipt_time,
		t1.return_time,
		t1.stage_id,
		t2.mobile
	</sql>
	<sql id="order_sku_column">
		t3.id s_id,
		t3.order_id,
		t3.sku_id,
		t3.sku_name,
		t3.sku_description,
		t3.sku_detail,
		t3.sku_erp_code,
		t3.sku_head_thumbnail,
		t3.sku_count,
		t3.sku_price,
		t3.sku_original_price,
		t3.sku_attribute,
		t3.activity_type,
		t3.activity_id,
		t3.avg_price,
		t3.fact_amount,
		t3.return_count
	</sql>
	<sql id="order_cancellation_column">
		t4.id cancelId ,t4.status cancelStatus ,t4.no cancelNo
		,t4.create_time
		cancelCreateTime
	</sql>
	<select id="selectOrderSkusList"  parameterType="java.util.Map"
		resultMap="CartResultMap">
		select
		<include refid="order_column_sku" />
		,t5.amount discount,po.status pickupStatus ,
		t1.invoice_title,t1.invoice_type,t1.invoice_status,
		<include refid="order_sku_column" />
		,
		<include refid="order_cancellation_column" />
		from t_order t1 left join t_user t2 on t1.cust_id = t2.id
		left join
		t_order_sku t3 on t1.id =t3.order_id
		left join
		( select id ,order_id
		,no, create_time,
		type, status from t_order_cancellation
		where id in
		(select max(id) from
		t_order_cancellation
		group by order_id ) )t4
		on
		t4.order_id = t1.id
		left join t_order_payment t5 on t5.order_id = t1.id
		and t5.category=3 and
		t5.type =11
		left join t_pickup_order po on
		po.order_id = t1.id
		<include refid="where_orders_skus_columns"></include>
		order by t1.create_time desc 
		<if test="limit != null  and offset != null ">
			LIMIT #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
		</if>
	</select>

	<select id="selectOrderSkusCount" 
		resultType="java.lang.Long">
		select count(*)
		from t_order t1 left join t_user t2 on t1.cust_id =
		t2.id
		left join
		t_order_sku t3 on t1.id =t3.order_id
		left join
		( select id
		,order_id
		,no, create_time,
		type, status from t_order_cancellation
		where status &lt;&gt;2  and 
		id in
		(select max(id) from
		t_order_cancellation
		group by order_id ) )t4
		on
		t4.order_id = t1.id
		left join t_order_payment t5 on t5.order_id =
		t1.id
		and t5.category=3 and
		t5.type =11
		left join t_pickup_order po on
		po.order_id = t1.id
		<include refid="where_orders_skus_columns"></include>
	</select>
	<sql id="where_orders_skus_columns">
		where 1=1 and t1.invalid = 0  and t1.cust_id =  #{custId,jdbcType=INTEGER}	
		<if test="id != null ">
			and t1.id = #{id,jdbcType=INTEGER}
		</if>
		<if test="orderSkuId !=null">
			and t3.id = #{orderSkuId,jdbcType=INTEGER} 
		</if>
		<if test="status != null and  status !=''">
			and t1.status = #{status,jdbcType=INTEGER}
			<!-- and (t4.status
			is null or (t4.status = 2 and t4.type = 1 )) -->
		</if>
		<if test="payMethod != null and  payMethod !=''">
			and t1.pay_method = #{payMethod,jdbcType=VARCHAR}
		</if>
		<if test="pickup == null or pickup =='' ">
			and po.order_id is null
		</if>
		<if test="pickup != null and pickup !='' ">
			and po.order_id is not null
		</if>
		<if test="pickupPointId != null and  pickupPointId !=''">
			and po.pickup_point_id = #{pickupPointId}
		</if>
	</sql>
	<!-- 查询所有活动ID为 -->
  <select id="findOrderActivityList"  resultType="com.tyiti.easycommerce.entity.Order" resultMap="BaseResultMap">
		select
			o.id, no, cust_id, amount,third_party_amount, down_payment, installment_amount,   
			installment_months, down_payment_payed, installment_payed,   down_payment_time, installment_time, pay_method, 
			status, invalid,   o.create_time, o.close_time, address_name, address_mobile,   
			address_full_text, address_zip, logistics_no,   logistics_company,stage_id,installment_rate
		from t_order o left join t_order_sku os on o.id=os.order_id 
		inner join  t_order_sku_activity osc on os.sku_id=osc.activity_skuId and o.id=osc.order_id 
	   WHERE <![CDATA[ o.`status`<=1]]> 
	   <if test="activityId != null and activityId != ''">
         and  osc.activity_id=#{activityId,jdbcType=INTEGER}
     </if>
  </select>
</mapper>